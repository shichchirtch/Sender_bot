from aiogram_dialog import Dialog, Window
from bot_instance import dp, bot_storage_key
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Next
from aiogram_dialog.widgets.input import  MessageInput
from aiogram.types import CallbackQuery, Message, FSInputFile, User
from aiogram_dialog import DialogManager
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import ContentType
import asyncio
import os
from postgres_functions import return_selector, get_user_count

class ADMIN(StatesGroup):
    first = State()
    accept_msg = State()
    admin_send_msg = State()


SURVEY_FILE_PATH = "./baza.txt"
SURVEY_CSV_FILE_PATH = "./user_surveys.csv"
SURVEY_CSV_FILE_PATH_OFFLINE = "./user_offline_2.csv"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def send_survey_file(callback: CallbackQuery, widget: Button, dialog_manager: DialogManager, *args, **kwargs):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª —Å –∞–Ω–∫–µ—Ç–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    if not os.path.exists(SURVEY_FILE_PATH):
        await callback.message.answer("–§–∞–π–ª —Å –∞–Ω–∫–µ—Ç–∞–º–∏ –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω.")
        return
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    survey_file = FSInputFile(SURVEY_FILE_PATH)
    await callback.bot.send_document(chat_id=-4776092700, document=survey_file)

    if os.path.exists(SURVEY_CSV_FILE_PATH):
        survey_csv_file = FSInputFile(SURVEY_CSV_FILE_PATH)
        await callback.bot.send_document(chat_id=-4776092700,document=survey_csv_file)

    if os.path.exists(SURVEY_CSV_FILE_PATH_OFFLINE):
        survey_csv_offline_file = FSInputFile(SURVEY_CSV_FILE_PATH_OFFLINE)
        await callback.bot.send_document(chat_id=-4776092700, document=survey_csv_offline_file)

async def admin_exit(callback: CallbackQuery, widget: Button, dialog_manager: DialogManager, *args, **kwargs):
    await dialog_manager.done()

async def get_skolko(dialog_manager: DialogManager, event_from_user: User, *args, **kwargs):
    taily_users = await get_user_count()
    # print('taily_users = ', taily_users)
    getter_data = {'skolko': f'‚è™  üëÆüèº‚Äç‚ôÇÔ∏èüßëüèº‚Äçüöíüë©üèªüë®üèº‚Äçü¶±üë©üèΩ‚Äçü¶±   {taily_users}'}
    return getter_data

async def send_admin_message(msg:Message, widget: MessageInput, dialog_manager: DialogManager, *args, **kwargs):
    admin_msg = msg.text.strip()
    admin_selector = admin_msg[0]
    # print('accepet_admin_message works')
    # print('admin selector = ', admin_selector, type(admin_selector))
    counter = 0
    users_db  = await dp.storage.get_data(key=bot_storage_key)
    # print('user_db = ', users_db)
    if admin_selector not in '12345678':
        rest_admin_msg = admin_msg
        for user in users_db.keys():
            await msg.bot.send_message(chat_id=int(user), text=rest_admin_msg)
            counter+=1
            await asyncio.sleep(0.2)
    else:
        rest_admin_msg = admin_msg[1:]
        for user in users_db.keys():
            # print('user = ', user)
            selector = await return_selector(int(user))
            # print('user_selector = ', selector)
            if selector == admin_selector:
                await msg.bot.send_message(chat_id=user, text=rest_admin_msg)
                counter += 1
                await asyncio.sleep(0.2)

    await msg.answer(f'–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n\n–ß–∏—Å–ª–æ –æ—Ç–ø—Ä–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π = {counter}')
    await dialog_manager.back()

async def send_code(cb:CallbackQuery, widget: Button, dialog_manager: DialogManager, *args, **kwargs):
    # print('send_code works')
    counter = 0
    users_db = await dp.storage.get_data(key=bot_storage_key)
    # print('users_db = ', users_db)
    for user in users_db.keys():
        # print('user = ', user)
        selector = await return_selector(int(user))
        if selector == 'wait':
            await cb.bot.send_message(chat_id=user, text='–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∫–æ–¥ 2025')
            counter+=1
            await asyncio.sleep(0.2)

    await cb.message.answer(f'–¢–µ–ø–µ—Ä—å –∑–∞–ø–æ–ª–Ω–∏–≤—à–∏–µ –∞–Ω–∫–µ—Ç—É –º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è\n\n–ß–∏—Å–ª–æ –æ—Ç–ø—Ä–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π = {counter}')
    await dialog_manager.back()


admin_dialog = Dialog(
    Window(
        Const('–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Ç–æ–π –∏–ª–∏ –∏–Ω–æ–π –≥—Ä—É–ø–ø—ã —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ù–∞—á–Ω–∏–Ω–∞–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å '
              '\n\n<b>2</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è'
              '\n\n<b>3</b>  - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ  –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∫–µ—Ç—É'
              '\n\n<b>4</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É –∏ –∂–¥—ë—Ç –∞–¥—Ä–µ—Å –æ—Ç–µ–ª—è'
              '\n\n<b>5</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –∂–¥—ë—Ç –Ω–æ–º–µ—Ä –∑–∞–ª–∞'
              '\n\n<b>6</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –∂–¥—ë—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É —Å–µ—Å—Å–∏–∏'
              '\n\n<b>7</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –ø—Ä–æ—à–µ–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'
              '\n\n<b>8</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –∂–¥—ë—Ç —Ä–∞–±–æ—Ç—á–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã'
              '\n\n<b>1</b> - –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–µ–º –∫—Ç–æ –ó–∞–∫–æ–Ω—á–∏–ª –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º'
              '\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–∞–≤—à–∏–º –±–æ—Ç–∞ - –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
              '\n\nüü£'),
        Button(
            Const('–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å –±–∞–∑–æ–π –∞–Ω–∫–µ—Ç'),
            id='get_baza',
            on_click=send_survey_file
        ),
        Button(
            Const('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ —Ç–µ–º –∫—Ç–æ –∑–∞–ø–æ–ª–Ω–∏–ª –∞–Ω–∫–µ—Ç—É'),
            id='send_code',
            on_click=send_code
        ),
        Button(
            text=Format('{skolko}'),
            id='exit',
            on_click=admin_exit),

        Next(
            text=Const('–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'),
            id='send_msg'),
        state=ADMIN.first,
        getter=get_skolko,
    ),
    Window(  # –û–∫–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—é—â–µ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        Const(text='–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'),
        MessageInput(
            func=send_admin_message,
            content_types=ContentType.TEXT,
        ),
        state=ADMIN.accept_msg
    ),
    # Window(
    #     Const('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â—É—Ö—É'),
    #     Button(
    #         text=Const('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —é–∑–µ—Ä–∞–º'),
    #         id='send_msg',
    #         on_click=sending_msg),
    #     state=ADMIN.admin_send_msg)

)